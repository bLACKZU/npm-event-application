name: Simple Express App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read # access to check out code and install dependencies

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.read_artifact_name.outputs.artifact_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.x'
          
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build the App
        run: npm run build

      - name: Run dummy tests
        run: npm test

      - name: Archive production artifacts
        id: set_artifact_name
        shell: bash
        run: |
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)
            echo "dist-${TIMESTAMP}" > artifact_name.txt
            
      - name: Read artifact name
        id: read_artifact_name
        run: echo "artifact_name=$(cat artifact_name.txt)" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.read_artifact_name.outputs.artifact_name }}
          path: |
            dist
            !dist/**/*.md
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npx standard --verbose
    
      
  download_artifacts:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}
        
      - name: List all files
        run: |
          pwd
          echo "Listing all files in the current directory:"
          ls -l
        shell: bash

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts from the previous job."
          ls -l dist
        shell: bash